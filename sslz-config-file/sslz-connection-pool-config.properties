#=====================\u8FDE\u63A5\u6C60\u914D\u7F6E=========================
#\u5982\u4F55\u83B7\u53D6\u516C\u94A5
# java -cp druid-XXX.jar com.alibaba.druid.filter.config.ConfigTools \u6570\u636E\u5E93\u7684\u5BC6\u7801
# \u4F8B\u5982: java -cp /home/yxl/.m2/repository/com/alibaba/druid/1.1.10/druid-1.1.10.jar com.alibaba.druid.filter.config.ConfigTools \u6570\u636E\u5E93\u7684\u5BC6\u7801
# \u6CE8\u610F\uFF1Adruid-XXX.jar \u662F\u5F53\u524D\u672C\u5730maven\u4ED3\u5E93\u4E2D\u4F7F\u7528\u7684druid\u7684\u7248\u672C\u67B6\u5305
# \u516C\u94A5
password.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJb+R6bmz0ouXknsvZgAvIynZDH0lLK28vejrv1xJjH2siibSGGbB7FDaECKUzk8D5rn6HUipR+CMxByqPbQ5ykCAwEAAQ==
# \u914D\u7F6E connection-properties\uFF0C\u542F\u7528\u52A0\u5BC6\uFF0C\u914D\u7F6E\u516C\u94A5\u3002
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${password.publicKey}
# \u542F\u52A8ConfigFilter
spring.datasource.druid.filter.config.enabled=true
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=10
spring.datasource.druid.max-active=20
#\u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.druid.max-wait=60000
#\u6253\u5F00PSCache  Mysql\u4E0B\u5EFA\u8BAE\u5173\u95ED
spring.datasource.druid.pool-prepared-statements=false
#\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#\u8981\u542F\u7528PSCache\uFF0C\u5FC5\u987B\u914D\u7F6E\u5927\u4E8E0\uFF0C\u5F53\u5927\u4E8E0\u65F6\uFF0CpoolPreparedStatements\u81EA\u52A8\u89E6\u53D1\u4FEE\u6539\u4E3Atrue\u3002
spring.datasource.druid.max-open-prepared-statements=20
#\u7528\u6765\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u7684sql\uFF0C\u8981\u6C42\u662F\u4E00\u4E2A\u67E5\u8BE2\u8BED\u53E5\uFF0C\u5E38\u7528select 'x'\u3002\u5982\u679CvalidationQuery\u4E3Anull\uFF0CtestOnBorrow\u3001testOnReturn\u3001testWhileIdle\u90FD\u4E0D\u4F1A\u8D77\u4F5C\u7528\u3002
spring.datasource.druid.validation-query=SELECT 'x'
#\u5355\u4F4D\uFF1A\u79D2\uFF0C\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u7684\u8D85\u65F6\u65F6\u95F4
spring.datasource.druid.validation-query-timeout=60
#\u7533\u8BF7\u8FDE\u63A5\u65F6\u6267\u884CvalidationQuery\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\uFF0C\u505A\u4E86\u8FD9\u4E2A\u914D\u7F6E\u4F1A\u964D\u4F4E\u6027\u80FD\u3002
spring.datasource.druid.test-on-borrow=false
#\u5F52\u8FD8\u8FDE\u63A5\u65F6\u6267\u884CvalidationQuery\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\uFF0C\u505A\u4E86\u8FD9\u4E2A\u914D\u7F6E\u4F1A\u964D\u4F4E\u6027\u80FD
spring.datasource.druid.test-on-return=false
#\u7533\u8BF7\u8FDE\u63A5\u7684\u65F6\u5019\u68C0\u6D4B\uFF0C\u5982\u679C\u7A7A\u95F2\u65F6\u95F4\u5927\u4E8EtimeBetweenEvictionRunsMillis\uFF0C\u6267\u884CvalidationQuery\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u3002
spring.datasource.druid.test-while-idle=true
#Destroy\u7EBF\u7A0B\u4F1A\u68C0\u6D4B\u8FDE\u63A5\u7684\u95F4\u9694\u65F6\u95F4,testWhileIdle\u7684\u5224\u65AD\u4F9D\u636E \u5355\u4F4D\u6BEB\u79D2
spring.datasource.druid.time-between-eviction-runs-millis=60000
#\u8FDE\u63A5\u4FDD\u6301\u7A7A\u95F2\u800C\u4E0D\u88AB\u9A71\u9010\u7684\u65F6\u95F4
spring.datasource.druid.min-evictable-idle-time-millis=300000
#\u8FDE\u63A5\u4FDD\u6301\u7A7A\u95F2\u800C\u4E0D\u88AB\u9A71\u9010\u7684\u6700\u957F\u65F6\u95F4
spring.datasource.druid.max-evictable-idle-time-millis=600000
#\u7981\u7528\u5BF9\u4E8E\u957F\u65F6\u95F4\u4E0D\u4F7F\u7528\u7684\u8FDE\u63A5\u5F3A\u5236\u5173\u95ED\u7684\u529F\u80FD
spring.datasource.druid.remove-abandoned=true
#\u8D85\u8FC730\u5206\u949F\u5F00\u59CB\u5173\u95ED\u7A7A\u95F2\u8FDE\u63A5
spring.datasource.druid.remove-abandoned-timeout=1800
#\u5C06\u5F53\u524D\u5173\u95ED\u52A8\u4F5C\u8BB0\u5F55\u5230\u65E5\u5FD7\uFF0C\u7531\u4E8EremoveAbandoned\u4E3Afalse\uFF0C\u8FD9\u4E2A\u8BBE\u7F6E\u9879\u4E0D\u518D\u8D77\u4F5C\u7528
spring.datasource.druid.log-abandoned=true
#\u5C5E\u6027\u7C7B\u578B\u662F\u5B57\u7B26\u4E32\uFF0C\u5E38\u7528\u7684\u63D2\u4EF6\u6709\uFF1A
# \u76D1\u63A7\u7EDF\u8BA1\u7528\u7684filter:stat
# \u9632\u5FA1sql\u6CE8\u5165\u7684filter:wall
spring.datasource.druid.filters=stat,wall,slf4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#\u76D1\u63A7\u914D\u7F6E
# WallFilter\u914D\u7F6E
spring.datasource.druid.filter.wall.enabled=true
#\u662F\u5426\u5141\u8BB8\u6267\u884CSELECT * FROM T\u8FD9\u6837\u7684\u8BED\u53E5
spring.datasource.druid.filter.wall.config.select-all-column-allow=false
#\u662F\u5426\u5141\u8BB8\u4FEE\u6539\u8868
spring.datasource.druid.filter.wall.config.drop-table-allow=false
#\u5BF9\u88AB\u8BA4\u4E3A\u662F\u653B\u51FB\u7684SQL\u8FDB\u884CLOG.error\u8F93\u51FA
spring.datasource.druid.filter.wall.log-violation=true